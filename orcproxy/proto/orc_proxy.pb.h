// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: orc_proxy.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_orc_5fproxy_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_orc_5fproxy_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_orc_5fproxy_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_orc_5fproxy_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_orc_5fproxy_2eproto;
namespace orc_proxy {
namespace proto {
class Field;
struct FieldDefaultTypeInternal;
extern FieldDefaultTypeInternal _Field_default_instance_;
class Row;
struct RowDefaultTypeInternal;
extern RowDefaultTypeInternal _Row_default_instance_;
}  // namespace proto
}  // namespace orc_proxy
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace orc_proxy {
namespace proto {
enum Field_Kind : int {
  Field_Kind_BOOLEAN = 0,
  Field_Kind_BYTE = 1,
  Field_Kind_SHORT = 2,
  Field_Kind_INT = 3,
  Field_Kind_LONG = 4,
  Field_Kind_FLOAT = 5,
  Field_Kind_DOUBLE = 6,
  Field_Kind_STRING = 7,
  Field_Kind_BINARY = 8,
  Field_Kind_TIMESTAMP = 9,
  Field_Kind_LIST = 10,
  Field_Kind_MAP = 11,
  Field_Kind_STRUCT = 12,
  Field_Kind_UNION = 13,
  Field_Kind_DECIMAL = 14,
  Field_Kind_DATE = 15,
  Field_Kind_VARCHAR = 16,
  Field_Kind_CHAR = 17,
  Field_Kind_TIMESTAMP_INSTANT = 18,
};

bool Field_Kind_IsValid(int value);
constexpr Field_Kind Field_Kind_Kind_MIN = static_cast<Field_Kind>(0);
constexpr Field_Kind Field_Kind_Kind_MAX = static_cast<Field_Kind>(18);
constexpr int Field_Kind_Kind_ARRAYSIZE = 18 + 1;
const ::google::protobuf::EnumDescriptor*
Field_Kind_descriptor();
template <typename T>
const std::string& Field_Kind_Name(T value) {
  static_assert(std::is_same<T, Field_Kind>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Kind_Name().");
  return Field_Kind_Name(static_cast<Field_Kind>(value));
}
template <>
inline const std::string& Field_Kind_Name(Field_Kind value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Field_Kind_descriptor,
                                                 0, 18>(
      static_cast<int>(value));
}
inline bool Field_Kind_Parse(absl::string_view name, Field_Kind* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Field_Kind>(
      Field_Kind_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class Field final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:orc_proxy.proto.Field) */ {
 public:
  inline Field() : Field(nullptr) {}
  ~Field() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Field(::google::protobuf::internal::ConstantInitialized);

  Field(const Field& from);
  Field(Field&& from) noexcept
    : Field() {
    *this = ::std::move(from);
  }

  inline Field& operator=(const Field& from) {
    CopyFrom(from);
    return *this;
  }
  inline Field& operator=(Field&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Field& default_instance() {
    return *internal_default_instance();
  }
  static inline const Field* internal_default_instance() {
    return reinterpret_cast<const Field*>(
               &_Field_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Field& a, Field& b) {
    a.Swap(&b);
  }
  inline void Swap(Field* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Field* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Field* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Field>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Field& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Field& from) {
    Field::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Field* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "orc_proxy.proto.Field";
  }
  protected:
  explicit Field(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Kind = Field_Kind;
  static constexpr Kind BOOLEAN = Field_Kind_BOOLEAN;
  static constexpr Kind BYTE = Field_Kind_BYTE;
  static constexpr Kind SHORT = Field_Kind_SHORT;
  static constexpr Kind INT = Field_Kind_INT;
  static constexpr Kind LONG = Field_Kind_LONG;
  static constexpr Kind FLOAT = Field_Kind_FLOAT;
  static constexpr Kind DOUBLE = Field_Kind_DOUBLE;
  static constexpr Kind STRING = Field_Kind_STRING;
  static constexpr Kind BINARY = Field_Kind_BINARY;
  static constexpr Kind TIMESTAMP = Field_Kind_TIMESTAMP;
  static constexpr Kind LIST = Field_Kind_LIST;
  static constexpr Kind MAP = Field_Kind_MAP;
  static constexpr Kind STRUCT = Field_Kind_STRUCT;
  static constexpr Kind UNION = Field_Kind_UNION;
  static constexpr Kind DECIMAL = Field_Kind_DECIMAL;
  static constexpr Kind DATE = Field_Kind_DATE;
  static constexpr Kind VARCHAR = Field_Kind_VARCHAR;
  static constexpr Kind CHAR = Field_Kind_CHAR;
  static constexpr Kind TIMESTAMP_INSTANT = Field_Kind_TIMESTAMP_INSTANT;
  static inline bool Kind_IsValid(int value) {
    return Field_Kind_IsValid(value);
  }
  static constexpr Kind Kind_MIN = Field_Kind_Kind_MIN;
  static constexpr Kind Kind_MAX = Field_Kind_Kind_MAX;
  static constexpr int Kind_ARRAYSIZE = Field_Kind_Kind_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Kind_descriptor() {
    return Field_Kind_descriptor();
  }
  template <typename T>
  static inline const std::string& Kind_Name(T value) {
    return Field_Kind_Name(value);
  }
  static inline bool Kind_Parse(absl::string_view name, Kind* value) {
    return Field_Kind_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 3,
    kKindFieldNumber = 1,
    kLengthFieldNumber = 2,
  };
  // optional bytes value = 3;
  bool has_value() const;
  void clear_value() ;
  const std::string& value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* ptr);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  // optional .orc_proxy.proto.Field.Kind kind = 1;
  bool has_kind() const;
  void clear_kind() ;
  ::orc_proxy::proto::Field_Kind kind() const;
  void set_kind(::orc_proxy::proto::Field_Kind value);

  private:
  ::orc_proxy::proto::Field_Kind _internal_kind() const;
  void _internal_set_kind(::orc_proxy::proto::Field_Kind value);

  public:
  // optional uint32 length = 2;
  bool has_length() const;
  void clear_length() ;
  ::uint32_t length() const;
  void set_length(::uint32_t value);

  private:
  ::uint32_t _internal_length() const;
  void _internal_set_length(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:orc_proxy.proto.Field)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr value_;
    int kind_;
    ::uint32_t length_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_orc_5fproxy_2eproto;
};// -------------------------------------------------------------------

class Row final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:orc_proxy.proto.Row) */ {
 public:
  inline Row() : Row(nullptr) {}
  ~Row() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Row(::google::protobuf::internal::ConstantInitialized);

  Row(const Row& from);
  Row(Row&& from) noexcept
    : Row() {
    *this = ::std::move(from);
  }

  inline Row& operator=(const Row& from) {
    CopyFrom(from);
    return *this;
  }
  inline Row& operator=(Row&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Row& default_instance() {
    return *internal_default_instance();
  }
  static inline const Row* internal_default_instance() {
    return reinterpret_cast<const Row*>(
               &_Row_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Row& a, Row& b) {
    a.Swap(&b);
  }
  inline void Swap(Row* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Row* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Row* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Row>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Row& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Row& from) {
    Row::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Row* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "orc_proxy.proto.Row";
  }
  protected:
  explicit Row(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFieldFieldNumber = 1,
  };
  // repeated .orc_proxy.proto.Field field = 1;
  int field_size() const;
  private:
  int _internal_field_size() const;

  public:
  void clear_field() ;
  ::orc_proxy::proto::Field* mutable_field(int index);
  ::google::protobuf::RepeatedPtrField< ::orc_proxy::proto::Field >*
      mutable_field();
  private:
  const ::google::protobuf::RepeatedPtrField<::orc_proxy::proto::Field>& _internal_field() const;
  ::google::protobuf::RepeatedPtrField<::orc_proxy::proto::Field>* _internal_mutable_field();
  public:
  const ::orc_proxy::proto::Field& field(int index) const;
  ::orc_proxy::proto::Field* add_field();
  const ::google::protobuf::RepeatedPtrField< ::orc_proxy::proto::Field >&
      field() const;
  // @@protoc_insertion_point(class_scope:orc_proxy.proto.Row)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::orc_proxy::proto::Field > field_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_orc_5fproxy_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Field

// optional .orc_proxy.proto.Field.Kind kind = 1;
inline bool Field::has_kind() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Field::clear_kind() {
  _impl_.kind_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::orc_proxy::proto::Field_Kind Field::kind() const {
  // @@protoc_insertion_point(field_get:orc_proxy.proto.Field.kind)
  return _internal_kind();
}
inline void Field::set_kind(::orc_proxy::proto::Field_Kind value) {
  _internal_set_kind(value);
  // @@protoc_insertion_point(field_set:orc_proxy.proto.Field.kind)
}
inline ::orc_proxy::proto::Field_Kind Field::_internal_kind() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::orc_proxy::proto::Field_Kind>(_impl_.kind_);
}
inline void Field::_internal_set_kind(::orc_proxy::proto::Field_Kind value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::orc_proxy::proto::Field_Kind_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.kind_ = value;
}

// optional uint32 length = 2;
inline bool Field::has_length() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Field::clear_length() {
  _impl_.length_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t Field::length() const {
  // @@protoc_insertion_point(field_get:orc_proxy.proto.Field.length)
  return _internal_length();
}
inline void Field::set_length(::uint32_t value) {
  _internal_set_length(value);
  // @@protoc_insertion_point(field_set:orc_proxy.proto.Field.length)
}
inline ::uint32_t Field::_internal_length() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.length_;
}
inline void Field::_internal_set_length(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.length_ = value;
}

// optional bytes value = 3;
inline bool Field::has_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Field::clear_value() {
  _impl_.value_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Field::value() const {
  // @@protoc_insertion_point(field_get:orc_proxy.proto.Field.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Field::set_value(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.value_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:orc_proxy.proto.Field.value)
}
inline std::string* Field::mutable_value() {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:orc_proxy.proto.Field.value)
  return _s;
}
inline const std::string& Field::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.value_.Get();
}
inline void Field::_internal_set_value(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.value_.Set(value, GetArenaForAllocation());
}
inline std::string* Field::_internal_mutable_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.value_.Mutable( GetArenaForAllocation());
}
inline std::string* Field::release_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:orc_proxy.proto.Field.value)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.value_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Field::set_allocated_value(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.value_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.value_.IsDefault()) {
          _impl_.value_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:orc_proxy.proto.Field.value)
}

// -------------------------------------------------------------------

// Row

// repeated .orc_proxy.proto.Field field = 1;
inline int Row::_internal_field_size() const {
  return _internal_field().size();
}
inline int Row::field_size() const {
  return _internal_field_size();
}
inline void Row::clear_field() {
  _internal_mutable_field()->Clear();
}
inline ::orc_proxy::proto::Field* Row::mutable_field(int index) {
  // @@protoc_insertion_point(field_mutable:orc_proxy.proto.Row.field)
  return _internal_mutable_field()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::orc_proxy::proto::Field >*
Row::mutable_field() {
  // @@protoc_insertion_point(field_mutable_list:orc_proxy.proto.Row.field)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_field();
}
inline const ::orc_proxy::proto::Field& Row::field(int index) const {
  // @@protoc_insertion_point(field_get:orc_proxy.proto.Row.field)
    return _internal_field().Get(index);
}
inline ::orc_proxy::proto::Field* Row::add_field() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::orc_proxy::proto::Field* _add = _internal_mutable_field()->Add();
  // @@protoc_insertion_point(field_add:orc_proxy.proto.Row.field)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::orc_proxy::proto::Field >&
Row::field() const {
  // @@protoc_insertion_point(field_list:orc_proxy.proto.Row.field)
  return _internal_field();
}
inline const ::google::protobuf::RepeatedPtrField<::orc_proxy::proto::Field>&
Row::_internal_field() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.field_;
}
inline ::google::protobuf::RepeatedPtrField<::orc_proxy::proto::Field>*
Row::_internal_mutable_field() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.field_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace orc_proxy


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::orc_proxy::proto::Field_Kind> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::orc_proxy::proto::Field_Kind>() {
  return ::orc_proxy::proto::Field_Kind_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_orc_5fproxy_2eproto_2epb_2eh
