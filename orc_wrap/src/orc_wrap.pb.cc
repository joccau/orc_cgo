// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: orc_wrap.proto

#include "orc_wrap.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace orc_proto {
class TypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type>
      _instance;
} _Type_default_instance_;
class FieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Field>
      _instance;
} _Field_default_instance_;
class RowDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Row>
      _instance;
} _Row_default_instance_;
}  // namespace orc_proto
namespace protobuf_orc_5fwrap_2eproto {
void InitDefaultsTypeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::orc_proto::_Type_default_instance_;
    new (ptr) ::orc_proto::Type();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::orc_proto::Type::InitAsDefaultInstance();
}

void InitDefaultsType() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTypeImpl);
}

void InitDefaultsFieldImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_orc_5fwrap_2eproto::InitDefaultsType();
  {
    void* ptr = &::orc_proto::_Field_default_instance_;
    new (ptr) ::orc_proto::Field();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::orc_proto::Field::InitAsDefaultInstance();
}

void InitDefaultsField() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFieldImpl);
}

void InitDefaultsRowImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_orc_5fwrap_2eproto::InitDefaultsField();
  {
    void* ptr = &::orc_proto::_Row_default_instance_;
    new (ptr) ::orc_proto::Row();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::orc_proto::Row::InitAsDefaultInstance();
}

void InitDefaultsRow() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRowImpl);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::orc_proto::Type, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::orc_proto::Type, kind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::orc_proto::Type, subtypes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::orc_proto::Type, fieldnames_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::orc_proto::Type, maximumlength_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::orc_proto::Type, precision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::orc_proto::Type, scale_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::orc_proto::Field, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::orc_proto::Field, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::orc_proto::Field, i_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::orc_proto::Field, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::orc_proto::Field, length_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::orc_proto::Row, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::orc_proto::Row, fields_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::orc_proto::Type)},
  { 11, -1, sizeof(::orc_proto::Field)},
  { 20, -1, sizeof(::orc_proto::Row)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::orc_proto::_Type_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::orc_proto::_Field_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::orc_proto::_Row_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "orc_wrap.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016orc_wrap.proto\022\torc_proto\"\370\002\n\004Type\022\"\n\004"
      "kind\030\001 \001(\0162\024.orc_proto.Type.Kind\022\024\n\010subt"
      "ypes\030\002 \003(\rB\002\020\001\022\022\n\nfieldNames\030\003 \003(\t\022\025\n\rma"
      "ximumLength\030\004 \001(\r\022\021\n\tprecision\030\005 \001(\r\022\r\n\005"
      "scale\030\006 \001(\r\"\350\001\n\004Kind\022\013\n\007BOOLEAN\020\000\022\010\n\004BYT"
      "E\020\001\022\t\n\005SHORT\020\002\022\007\n\003INT\020\003\022\010\n\004LONG\020\004\022\t\n\005FLO"
      "AT\020\005\022\n\n\006DOUBLE\020\006\022\n\n\006STRING\020\007\022\n\n\006BINARY\020\010"
      "\022\r\n\tTIMESTAMP\020\t\022\010\n\004LIST\020\n\022\007\n\003MAP\020\013\022\n\n\006ST"
      "RUCT\020\014\022\t\n\005UNION\020\r\022\013\n\007DECIMAL\020\016\022\010\n\004DATE\020\017"
      "\022\013\n\007VARCHAR\020\020\022\010\n\004CHAR\020\021\022\025\n\021TIMESTAMP_INS"
      "TANT\020\022\"P\n\005Field\022\035\n\004type\030\001 \001(\0132\017.orc_prot"
      "o.Type\022\t\n\001i\030\002 \001(\003\022\r\n\005value\030\004 \001(\014\022\016\n\006leng"
      "th\030\003 \001(\r\"\'\n\003Row\022 \n\006fields\030\001 \003(\0132\020.orc_pr"
      "oto.FieldB\rZ\013./orc_protob\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 552);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "orc_wrap.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_orc_5fwrap_2eproto
namespace orc_proto {
const ::google::protobuf::EnumDescriptor* Type_Kind_descriptor() {
  protobuf_orc_5fwrap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_orc_5fwrap_2eproto::file_level_enum_descriptors[0];
}
bool Type_Kind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Type_Kind Type::BOOLEAN;
const Type_Kind Type::BYTE;
const Type_Kind Type::SHORT;
const Type_Kind Type::INT;
const Type_Kind Type::LONG;
const Type_Kind Type::FLOAT;
const Type_Kind Type::DOUBLE;
const Type_Kind Type::STRING;
const Type_Kind Type::BINARY;
const Type_Kind Type::TIMESTAMP;
const Type_Kind Type::LIST;
const Type_Kind Type::MAP;
const Type_Kind Type::STRUCT;
const Type_Kind Type::UNION;
const Type_Kind Type::DECIMAL;
const Type_Kind Type::DATE;
const Type_Kind Type::VARCHAR;
const Type_Kind Type::CHAR;
const Type_Kind Type::TIMESTAMP_INSTANT;
const Type_Kind Type::Kind_MIN;
const Type_Kind Type::Kind_MAX;
const int Type::Kind_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Type::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type::kKindFieldNumber;
const int Type::kSubtypesFieldNumber;
const int Type::kFieldNamesFieldNumber;
const int Type::kMaximumLengthFieldNumber;
const int Type::kPrecisionFieldNumber;
const int Type::kScaleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type::Type()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_orc_5fwrap_2eproto::InitDefaultsType();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:orc_proto.Type)
}
Type::Type(const Type& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      subtypes_(from.subtypes_),
      fieldnames_(from.fieldnames_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&kind_, &from.kind_,
    static_cast<size_t>(reinterpret_cast<char*>(&scale_) -
    reinterpret_cast<char*>(&kind_)) + sizeof(scale_));
  // @@protoc_insertion_point(copy_constructor:orc_proto.Type)
}

void Type::SharedCtor() {
  ::memset(&kind_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scale_) -
      reinterpret_cast<char*>(&kind_)) + sizeof(scale_));
  _cached_size_ = 0;
}

Type::~Type() {
  // @@protoc_insertion_point(destructor:orc_proto.Type)
  SharedDtor();
}

void Type::SharedDtor() {
}

void Type::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type::descriptor() {
  ::protobuf_orc_5fwrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_orc_5fwrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type& Type::default_instance() {
  ::protobuf_orc_5fwrap_2eproto::InitDefaultsType();
  return *internal_default_instance();
}

Type* Type::New(::google::protobuf::Arena* arena) const {
  Type* n = new Type;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type::Clear() {
// @@protoc_insertion_point(message_clear_start:orc_proto.Type)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subtypes_.Clear();
  fieldnames_.Clear();
  ::memset(&kind_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scale_) -
      reinterpret_cast<char*>(&kind_)) + sizeof(scale_));
  _internal_metadata_.Clear();
}

bool Type::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:orc_proto.Type)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .orc_proto.Type.Kind kind = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_kind(static_cast< ::orc_proto::Type_Kind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 subtypes = 2 [packed = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_subtypes())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_subtypes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string fieldNames = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_fieldnames()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fieldnames(this->fieldnames_size() - 1).data(),
            static_cast<int>(this->fieldnames(this->fieldnames_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "orc_proto.Type.fieldNames"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 maximumLength = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maximumlength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 precision = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &precision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scale = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:orc_proto.Type)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:orc_proto.Type)
  return false;
#undef DO_
}

void Type::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:orc_proto.Type)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .orc_proto.Type.Kind kind = 1;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->kind(), output);
  }

  // repeated uint32 subtypes = 2 [packed = true];
  if (this->subtypes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _subtypes_cached_byte_size_));
  }
  for (int i = 0, n = this->subtypes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->subtypes(i), output);
  }

  // repeated string fieldNames = 3;
  for (int i = 0, n = this->fieldnames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fieldnames(i).data(), static_cast<int>(this->fieldnames(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "orc_proto.Type.fieldNames");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->fieldnames(i), output);
  }

  // uint32 maximumLength = 4;
  if (this->maximumlength() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->maximumlength(), output);
  }

  // uint32 precision = 5;
  if (this->precision() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->precision(), output);
  }

  // uint32 scale = 6;
  if (this->scale() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->scale(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:orc_proto.Type)
}

::google::protobuf::uint8* Type::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:orc_proto.Type)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .orc_proto.Type.Kind kind = 1;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->kind(), target);
  }

  // repeated uint32 subtypes = 2 [packed = true];
  if (this->subtypes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _subtypes_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->subtypes_, target);
  }

  // repeated string fieldNames = 3;
  for (int i = 0, n = this->fieldnames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fieldnames(i).data(), static_cast<int>(this->fieldnames(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "orc_proto.Type.fieldNames");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->fieldnames(i), target);
  }

  // uint32 maximumLength = 4;
  if (this->maximumlength() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->maximumlength(), target);
  }

  // uint32 precision = 5;
  if (this->precision() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->precision(), target);
  }

  // uint32 scale = 6;
  if (this->scale() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->scale(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:orc_proto.Type)
  return target;
}

size_t Type::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:orc_proto.Type)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 subtypes = 2 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->subtypes_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _subtypes_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string fieldNames = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->fieldnames_size());
  for (int i = 0, n = this->fieldnames_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->fieldnames(i));
  }

  // .orc_proto.Type.Kind kind = 1;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
  }

  // uint32 maximumLength = 4;
  if (this->maximumlength() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maximumlength());
  }

  // uint32 precision = 5;
  if (this->precision() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->precision());
  }

  // uint32 scale = 6;
  if (this->scale() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scale());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:orc_proto.Type)
  GOOGLE_DCHECK_NE(&from, this);
  const Type* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:orc_proto.Type)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:orc_proto.Type)
    MergeFrom(*source);
  }
}

void Type::MergeFrom(const Type& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:orc_proto.Type)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  subtypes_.MergeFrom(from.subtypes_);
  fieldnames_.MergeFrom(from.fieldnames_);
  if (from.kind() != 0) {
    set_kind(from.kind());
  }
  if (from.maximumlength() != 0) {
    set_maximumlength(from.maximumlength());
  }
  if (from.precision() != 0) {
    set_precision(from.precision());
  }
  if (from.scale() != 0) {
    set_scale(from.scale());
  }
}

void Type::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:orc_proto.Type)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type::CopyFrom(const Type& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:orc_proto.Type)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type::IsInitialized() const {
  return true;
}

void Type::Swap(Type* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type::InternalSwap(Type* other) {
  using std::swap;
  subtypes_.InternalSwap(&other->subtypes_);
  fieldnames_.InternalSwap(&other->fieldnames_);
  swap(kind_, other->kind_);
  swap(maximumlength_, other->maximumlength_);
  swap(precision_, other->precision_);
  swap(scale_, other->scale_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type::GetMetadata() const {
  protobuf_orc_5fwrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_orc_5fwrap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Field::InitAsDefaultInstance() {
  ::orc_proto::_Field_default_instance_._instance.get_mutable()->type_ = const_cast< ::orc_proto::Type*>(
      ::orc_proto::Type::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Field::kTypeFieldNumber;
const int Field::kIFieldNumber;
const int Field::kValueFieldNumber;
const int Field::kLengthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Field::Field()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_orc_5fwrap_2eproto::InitDefaultsField();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:orc_proto.Field)
}
Field::Field(const Field& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_type()) {
    type_ = new ::orc_proto::Type(*from.type_);
  } else {
    type_ = NULL;
  }
  ::memcpy(&i_, &from.i_,
    static_cast<size_t>(reinterpret_cast<char*>(&length_) -
    reinterpret_cast<char*>(&i_)) + sizeof(length_));
  // @@protoc_insertion_point(copy_constructor:orc_proto.Field)
}

void Field::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&length_) -
      reinterpret_cast<char*>(&type_)) + sizeof(length_));
  _cached_size_ = 0;
}

Field::~Field() {
  // @@protoc_insertion_point(destructor:orc_proto.Field)
  SharedDtor();
}

void Field::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete type_;
}

void Field::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Field::descriptor() {
  ::protobuf_orc_5fwrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_orc_5fwrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Field& Field::default_instance() {
  ::protobuf_orc_5fwrap_2eproto::InitDefaultsField();
  return *internal_default_instance();
}

Field* Field::New(::google::protobuf::Arena* arena) const {
  Field* n = new Field;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Field::Clear() {
// @@protoc_insertion_point(message_clear_start:orc_proto.Field)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
  ::memset(&i_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&length_) -
      reinterpret_cast<char*>(&i_)) + sizeof(length_));
  _internal_metadata_.Clear();
}

bool Field::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:orc_proto.Field)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .orc_proto.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 i = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &i_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 length = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:orc_proto.Field)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:orc_proto.Field)
  return false;
#undef DO_
}

void Field::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:orc_proto.Field)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .orc_proto.Type type = 1;
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->type_, output);
  }

  // int64 i = 2;
  if (this->i() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->i(), output);
  }

  // uint32 length = 3;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->length(), output);
  }

  // bytes value = 4;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:orc_proto.Field)
}

::google::protobuf::uint8* Field::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:orc_proto.Field)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .orc_proto.Type type = 1;
  if (this->has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->type_, deterministic, target);
  }

  // int64 i = 2;
  if (this->i() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->i(), target);
  }

  // uint32 length = 3;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->length(), target);
  }

  // bytes value = 4;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:orc_proto.Field)
  return target;
}

size_t Field::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:orc_proto.Field)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes value = 4;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // .orc_proto.Type type = 1;
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->type_);
  }

  // int64 i = 2;
  if (this->i() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->i());
  }

  // uint32 length = 3;
  if (this->length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->length());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Field::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:orc_proto.Field)
  GOOGLE_DCHECK_NE(&from, this);
  const Field* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Field>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:orc_proto.Field)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:orc_proto.Field)
    MergeFrom(*source);
  }
}

void Field::MergeFrom(const Field& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:orc_proto.Field)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_type()) {
    mutable_type()->::orc_proto::Type::MergeFrom(from.type());
  }
  if (from.i() != 0) {
    set_i(from.i());
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
}

void Field::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:orc_proto.Field)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Field::CopyFrom(const Field& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:orc_proto.Field)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Field::IsInitialized() const {
  return true;
}

void Field::Swap(Field* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Field::InternalSwap(Field* other) {
  using std::swap;
  value_.Swap(&other->value_);
  swap(type_, other->type_);
  swap(i_, other->i_);
  swap(length_, other->length_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Field::GetMetadata() const {
  protobuf_orc_5fwrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_orc_5fwrap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Row::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Row::kFieldsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Row::Row()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_orc_5fwrap_2eproto::InitDefaultsRow();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:orc_proto.Row)
}
Row::Row(const Row& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fields_(from.fields_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:orc_proto.Row)
}

void Row::SharedCtor() {
  _cached_size_ = 0;
}

Row::~Row() {
  // @@protoc_insertion_point(destructor:orc_proto.Row)
  SharedDtor();
}

void Row::SharedDtor() {
}

void Row::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Row::descriptor() {
  ::protobuf_orc_5fwrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_orc_5fwrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Row& Row::default_instance() {
  ::protobuf_orc_5fwrap_2eproto::InitDefaultsRow();
  return *internal_default_instance();
}

Row* Row::New(::google::protobuf::Arena* arena) const {
  Row* n = new Row;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Row::Clear() {
// @@protoc_insertion_point(message_clear_start:orc_proto.Row)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fields_.Clear();
  _internal_metadata_.Clear();
}

bool Row::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:orc_proto.Row)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .orc_proto.Field fields = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_fields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:orc_proto.Row)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:orc_proto.Row)
  return false;
#undef DO_
}

void Row::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:orc_proto.Row)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .orc_proto.Field fields = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fields_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->fields(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:orc_proto.Row)
}

::google::protobuf::uint8* Row::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:orc_proto.Row)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .orc_proto.Field fields = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fields_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->fields(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:orc_proto.Row)
  return target;
}

size_t Row::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:orc_proto.Row)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .orc_proto.Field fields = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->fields_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->fields(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Row::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:orc_proto.Row)
  GOOGLE_DCHECK_NE(&from, this);
  const Row* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Row>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:orc_proto.Row)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:orc_proto.Row)
    MergeFrom(*source);
  }
}

void Row::MergeFrom(const Row& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:orc_proto.Row)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fields_.MergeFrom(from.fields_);
}

void Row::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:orc_proto.Row)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Row::CopyFrom(const Row& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:orc_proto.Row)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Row::IsInitialized() const {
  return true;
}

void Row::Swap(Row* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Row::InternalSwap(Row* other) {
  using std::swap;
  fields_.InternalSwap(&other->fields_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Row::GetMetadata() const {
  protobuf_orc_5fwrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_orc_5fwrap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace orc_proto

// @@protoc_insertion_point(global_scope)
